// Generated by view binder compiler. Do not edit!
package com.example.Munasabati.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.Munasabati.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityServicesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView currentResv7;

  @NonNull
  public final EditText edSearchAdminServices;

  @NonNull
  public final ImageView ivServiceBack;

  @NonNull
  public final RecyclerView recyclerServices;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textViewHiClient;

  @NonNull
  public final View viewServices;

  private ActivityServicesBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView currentResv7, @NonNull EditText edSearchAdminServices,
      @NonNull ImageView ivServiceBack, @NonNull RecyclerView recyclerServices,
      @NonNull TextView textView2, @NonNull TextView textViewHiClient, @NonNull View viewServices) {
    this.rootView = rootView;
    this.currentResv7 = currentResv7;
    this.edSearchAdminServices = edSearchAdminServices;
    this.ivServiceBack = ivServiceBack;
    this.recyclerServices = recyclerServices;
    this.textView2 = textView2;
    this.textViewHiClient = textViewHiClient;
    this.viewServices = viewServices;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityServicesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityServicesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_services, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityServicesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.currentResv7;
      TextView currentResv7 = ViewBindings.findChildViewById(rootView, id);
      if (currentResv7 == null) {
        break missingId;
      }

      id = R.id.edSearchAdminServices;
      EditText edSearchAdminServices = ViewBindings.findChildViewById(rootView, id);
      if (edSearchAdminServices == null) {
        break missingId;
      }

      id = R.id.iv_ServiceBack;
      ImageView ivServiceBack = ViewBindings.findChildViewById(rootView, id);
      if (ivServiceBack == null) {
        break missingId;
      }

      id = R.id.recyclerServices;
      RecyclerView recyclerServices = ViewBindings.findChildViewById(rootView, id);
      if (recyclerServices == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textViewHiClient;
      TextView textViewHiClient = ViewBindings.findChildViewById(rootView, id);
      if (textViewHiClient == null) {
        break missingId;
      }

      id = R.id.viewServices;
      View viewServices = ViewBindings.findChildViewById(rootView, id);
      if (viewServices == null) {
        break missingId;
      }

      return new ActivityServicesBinding((ConstraintLayout) rootView, currentResv7,
          edSearchAdminServices, ivServiceBack, recyclerServices, textView2, textViewHiClient,
          viewServices);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
