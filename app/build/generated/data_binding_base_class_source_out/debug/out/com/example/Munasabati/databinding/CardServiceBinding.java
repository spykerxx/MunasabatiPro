// Generated by view binder compiler. Do not edit!
package com.example.Munasabati.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.Munasabati.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardServiceBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView ivCardServiceImage;

  @NonNull
  public final TextView tvCardServiceName;

  @NonNull
  public final TextView tvCardServicePrice;

  @NonNull
  public final TextView tvCardServiceProvider;

  private CardServiceBinding(@NonNull CardView rootView, @NonNull CardView cardView,
      @NonNull ImageView ivCardServiceImage, @NonNull TextView tvCardServiceName,
      @NonNull TextView tvCardServicePrice, @NonNull TextView tvCardServiceProvider) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.ivCardServiceImage = ivCardServiceImage;
    this.tvCardServiceName = tvCardServiceName;
    this.tvCardServicePrice = tvCardServicePrice;
    this.tvCardServiceProvider = tvCardServiceProvider;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardServiceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardServiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_service, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardServiceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardView = (CardView) rootView;

      id = R.id.iv_CardServiceImage;
      ImageView ivCardServiceImage = ViewBindings.findChildViewById(rootView, id);
      if (ivCardServiceImage == null) {
        break missingId;
      }

      id = R.id.tv_CardServiceName;
      TextView tvCardServiceName = ViewBindings.findChildViewById(rootView, id);
      if (tvCardServiceName == null) {
        break missingId;
      }

      id = R.id.tv_CardServicePrice;
      TextView tvCardServicePrice = ViewBindings.findChildViewById(rootView, id);
      if (tvCardServicePrice == null) {
        break missingId;
      }

      id = R.id.tv_CardServiceProvider;
      TextView tvCardServiceProvider = ViewBindings.findChildViewById(rootView, id);
      if (tvCardServiceProvider == null) {
        break missingId;
      }

      return new CardServiceBinding((CardView) rootView, cardView, ivCardServiceImage,
          tvCardServiceName, tvCardServicePrice, tvCardServiceProvider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
